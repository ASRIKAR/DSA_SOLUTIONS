class Solution {
    static int[] bellman_ford(int V, ArrayList<ArrayList<Integer>> edges, int S) {
        int dis [] = new int[V];
        for(int i =0; i<V;i++){
            dis[i] = (int)(1e8);
        }
        dis[S] = 0;
        for(int i = 0 ;i< V;i++){
            for(ArrayList<Integer> it : edges){
                int u = it.get(0);
                int v = it.get(1);
                int d = it.get(2);
                if(dis[v] > dis[u] + d && dis[u] != Integer.MAX_VALUE){
                    dis[v] = (dis[u] + d);
                }
            }
        }
         for(ArrayList<Integer> it : edges){
                int u = it.get(0);
                int v = it.get(1);
                int d = it.get(2);
                if(dis[v] > dis[u] + d && dis[u] != Integer.MAX_VALUE){
                    int [] temp = new int[1];
                    temp[0] = -1;
                    return temp;
                }
            }
            return dis;
    }
}

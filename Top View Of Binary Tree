/*********************************************

 Following is the TreeNode class structure

 class TreeNode {
     int data;
     TreeNode left;
     TreeNode right;

     TreeNode(int data) {
         this.data = data;
         this.left = null;
         this.right = null;
     }
 }

 *********************************************/

import java.util.ArrayList;
import java.util.List;
import java.util.*;
import java.util.*;


// class TreeNode {
//     int data;
//     TreeNode left;
//     TreeNode right;

//     TreeNode(int data) {
//         this.data = data;
//         left = null;
//         right = null;
//     }
// }

public class Solution {
    static class pair{
        int level;
        TreeNode node;
        pair(int level,TreeNode node){
            this.level = level;
            this.node = node;
        }
    }
    public static List<Integer> getTopView(TreeNode root) {
        List<Integer> a = new ArrayList<>();
        if(root == null){
            return a;
        }      
        Map<Integer,Integer> map = new TreeMap<>();
        Queue<pair> q = new LinkedList<>();
        q.add(new pair(0,root));
        while(!q.isEmpty()){
            TreeNode node = q.peek().node;
            int level = q.peek().level;
            q.poll(); 
            if(!map.containsKey(level))    
            map.put(level,node.data);
            if(node.left != null){
                q.add(new pair(level-1, node.left));
            }
            if(node.right != null){
                q.add(new pair(level+1, node.right));
            }
        }
        for (int key : map.keySet()) {
            a.add(map.get(key));
        }
        return a;
    }
}

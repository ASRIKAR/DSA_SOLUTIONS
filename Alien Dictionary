class Solution
{
    public String findOrder(String [] dict, int N, int K)
    {
        List<List<Integer>> adj = new ArrayList<>();
        for(int i =0;i<K;i++){
            adj.add(new ArrayList<>());
        }
        for(int i =0 ;i< N-1 ;i++){
            String s1 = dict[i];
            String s2 = dict[i+1];
            int len = Math.min(s1.length() , s2.length());
            for(int  j =0; j<len;j++){
                if(s1.charAt(j) != s2.charAt(j)){
                    adj.get(s1.charAt(j) - 'a').add(s2.charAt(j) - 'a');
                    break;
                }
            }
        }
        int [] indegree = new int[K];
        for(int i =0;i<K;i++){
            for(int it : adj.get(i)){
                indegree[it]++;
            }
        }
        Queue<Integer> q = new LinkedList<>();
        for(int i =0;i<K;i++){
            if(indegree[i] == 0){
                q.add(i);
            }
        }
        String s = "";
        while(!q.isEmpty()){
            int node = q.poll();
            s = s + (char)(node + 'a');
            for(int it:adj.get(node)){
                if(--indegree[it] == 0){
                    q.add(it);
                }
            }
        }
        return s;
    }
}

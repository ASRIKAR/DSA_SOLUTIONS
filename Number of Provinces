class Solution {
    static void dfsrec(ArrayList<ArrayList<Integer>> adjLs, int V,boolean visited[],int i){
        visited[i]=true;
        for(int u:adjLs.get(i)){
            if(visited[u]==false){
                dfsrec(adjLs,V,visited,u);
            }
        }
    }
    static int numProvinces(ArrayList<ArrayList<Integer>> adj, int V) {
        ArrayList<ArrayList<Integer>> adjLs = new ArrayList<ArrayList<Integer>>(); 
        for(int i = 0;i<V;i++) {
            adjLs.add(new ArrayList<Integer>()); 
        }
        // to change adjacency matrix to list 
        for(int i = 0;i<V;i++) {
            for(int j = 0;j<V;j++) {
                // self nodes are not considered 
                if(adj.get(i).get(j) == 1 && i != j) {
                    adjLs.get(i).add(j); 
                    adjLs.get(j).add(i); 
                }
            }
        }
        boolean visited[]=new boolean [V];
        int count=0;
        for(int i=0;i<V;i++){
            if(visited[i]==false){
                dfsrec(adjLs,V,visited,i);
                count++;
            }
        }
        return count;
    }
}

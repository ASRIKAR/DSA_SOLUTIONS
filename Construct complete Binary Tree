import java.util.* ;

// import org.graalvm.compiler.graph.Node;

// import java.io.*; 
/*************************************************************
  
    Following is the Binary Tree Node structure:

    class TreeNode {

	int data;
	TreeNode left;
	TreeNode right;

	TreeNode(int data) {
		this.data = data;
		left = null;
		right = null;
	  }
    }

*************************************************************/

public class Solution {
	public static TreeNode constructCBT(int[] arr) {
		TreeNode root = new TreeNode(arr[0]);
		
		Queue<TreeNode> q = new LinkedList<>();
		q.add(root);
		int j =1;
		while(!q.isEmpty() ){
			int n = q.size();
			for(int i =0;i<n;i++){
				TreeNode node = q.poll();
				if(j< arr.length && arr[j] != -1){
					node.left = new TreeNode(arr[j++]);
					q.add(node.left);
				}
				if(j< arr.length && arr[j] != -1){
					node.right = new TreeNode(arr[j++]);
					q.add(node.right);
				}
			}
		}
		return root;
	}
}

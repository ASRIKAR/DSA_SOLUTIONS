class Solution{
    static class pair{
        int first ;
        int second;
        pair(int first,int second){
            this.first = first;
            this.second = second;
        }
    }
    public static void solve(int i,int j ,int [][] vis,char[][] a,char [][] arr,int [] delrow,int [] delcol){
        int n = a.length;
        int m = a[0].length;
        vis[i][j] = 1;
        arr[i][j] = 'O';
        Queue<pair> q = new LinkedList<>();
        q.add(new pair(i,j));
        while(!q.isEmpty()){
            int row = q.peek().first;
            int col = q.peek().second;
            q.poll();
            for(int k=0;k<4;k++){
                int nrow = row + delrow[k];
                int ncol = col + delcol[k];
                if(nrow >=0 && nrow < n && ncol>=0 &&  ncol <m && a[nrow][ncol] == 'O'  && vis[nrow][ncol] == 0){
                    vis[nrow][ncol] = 1;
                    arr[nrow][ncol] = 'O';
                    q.add(new pair(nrow,ncol));
                }
            }
        }
        
    }
    static char[][] fill(int n, int m, char a[][])
    {
        int [][] vis = new int [n][m];
        char  [][] arr = new char[n][m];
        int []delrow = {0,-1,0,1};
        int [] delcol = {-1,0,1,0};
        for(int i= 0;i <n;i++){
            for(int j = 0;j < m;j++){
                if((i == 0 || j == 0 || i == n - 1 || j == m - 1) && a[i][j] == 'O' && vis[i][j] != 1){
                    solve(i,j,vis,a,arr,delrow,delcol);
                }
            }
        }
        for(int i= 0;i <n;i++){
            for(int j = 0;j < m;j++){
                if(vis[i][j] == 0){
                    arr[i][j] = 'X';
                }
            }
        }
        return arr;
    }
}
